#!/bin/sh

# Tests for render() function.

# The MIT License (MIT)
#
# Copyright (c) 2016 Sunaina Pai
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

_import=yes . ./oyster 

CACHE_DIR="$TWORK/_cache"

test_simple_file()
{
    render "$TDATA/simple.in.txt" > "$TWORK/simple.out.txt"
    diff -u "$TDATA/simple.out.txt" "$TWORK/simple.out.txt"
}

test_stdin()
{
    render < "$TDATA/simple.in.txt" > "$TWORK/simple.out.txt"
    diff -u "$TDATA/simple.out.txt" "$TWORK/simple.out.txt"
}

test_whitespace_preservation()
{
    render "$TDATA/whitespace.in.txt" > "$TWORK/whitespace.out.txt"
    diff -u "$TDATA/whitespace.out.txt" "$TWORK/whitespace.out.txt"
}

test_multiple_code_blocks_in_line()
{
    render "$TDATA/multiple-code.in.txt" > "$TWORK/multiple-code.out.txt"
    diff -u "$TDATA/multiple-code.out.txt" "$TWORK/multiple-code.out.txt"
}

test_simple_template()
{
    render "$TDATA/simple-template.in.txt" > "$TWORK/simple-template.out.txt"
    diff -u "$TDATA/simple-template.out.txt" "$TWORK/simple-template.out.txt"
}

test_cascaded_template()
{
    render "$TDATA/cascaded-template.in.txt" > \
           "$TWORK/cascaded-template.out.txt"

    diff -u "$TDATA/cascaded-template.out.txt" \
            "$TWORK/cascaded-template.out.txt"
}

test_include_file()
{
    render "$TDATA/include-file.in.txt" > \
           "$TWORK/include-file.out.txt"

    diff -u "$TDATA/include-file.out.txt" \
            "$TWORK/include-file.out.txt"
}

test_include_stdin()
{
    render "$TDATA/include-stdin.in.txt" > \
           "$TWORK/include-stdin.out.txt"

    diff -u "$TDATA/include-file.out.txt" \
            "$TWORK/include-stdin.out.txt"
}
